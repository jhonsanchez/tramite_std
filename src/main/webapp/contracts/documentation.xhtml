<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                template="/WEB-INF/template.xhtml">

    <ui:define name="content">
        <div class="layout-portlets-box">
            <div class="Container100">
                <div class="ContainerIndent">
                    <div class="Container100 TexAlCenter"><i class="fa fa-life-bouy red Fs100 MarTop20"></i></div>
                    <h1 class="TexAlCenter Fs40 red">Spark Documentation</h1>
                    <div class="EmptyBox40"></div>
                    <p:panel styleClass="leaden-back">
                        <div class="Fs20 TexAlCenter red">Installation</div>
                        <div class="EmptyBox10"></div>
                        <p>
                            Spark provides a main <i>template.xhtml</i> and additional <i>layoutmenu.xhtml</i>, <i>topbar.xhtml</i> files for the base layout. These 3 files must be placed under
                            WEB-INF folder. Provided empty-page.xhtml is a sample content page using the main template.xhtml that defines "content" as the main ui:define placeholder. Other required resources are the css, js, image and font files that are located
                            inside resources/spark-layout folder, simply copy the spark-layout folder to your %WEB-APP-FOLDER%/resources folder so that final path would be %WEB-APP-FOLDER%/spark-layout/. Please
                            refer to demo app or maven project of the demo app as the reference.
                        </p>
                        <p>
                            Theme is a regular PrimeFaces theme and setup is simple as defining primefaces.THEME context parameter in web.xml as "spark", refer to <a style="color:#e90c45" href="http://www.primefaces.org/themes">themes page</a> for more information.
                        </p>
                        <div class="Fs16 TexAlCenter red">Color Alternatives</div>
                        <p>Spark provides 4 different colors, main one is "green" and alternatives are "blue", "orange" and "red". To change the default green color, replace the <i>spark-layout.css</i> in template.xhtml with the color of your choice
                            like <i>spark-layout-blue.css</i>. Corresponding themes are also provided, names to be used in primefaces.THEME context parameters are <i>spark</i> for default, <i>spark-blue</i>, <i>spark-orange</i> and <i>spark-red</i> for alternatives. Both the layout and theme
                            can be defined dynamically using EL expressions as well. Please refer to the maven project for the sample implementation using a session scoped bean called ThemeView. Demo can be reached at the Colors submenu at the menubar.
                        </p>
                        <div class="Fs16 TexAlCenter red">Migration Guide</div>
                        <div class="EmptyBox10"></div>
                        <div class="Fs15 red">1.3 to 1.3.1</div>
                        <ul>
                            <li>- Update spark-layout.css and spark-layout-{color}.css files.</li>
                            <li>- Replace theme jar with the new jar.</li>
                        </ul>
                        <div class="EmptyBox10"></div>
                        <div class="Fs15 red">1.2 to 1.3</div>
                        <ul>
                            <li>- Update core-layout.css, spark-layout.css and spark-layout-{color}.css files.</li>
                            <li>- Replace theme jar with the new jar.</li>
                        </ul>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>
                    
                    <p:panel styleClass="leaden-back">
                        <div class="Fs20 TexAlCenter red">Menus</div>
                        <div class="EmptyBox10"></div>
                        <p>
                            Spark provides a multi-level menubar positioned at top of the screen. This menu is responsive and adjusts to the screen width automatically. 
                            Menu is actually a PrimeFaces component specifically created for Spar under <i>http://primefaces.org/spark</i> namespace having <i>menu</i> as the tag name., usage is same as a regular PrimeFaces component that utilizes p:submenu and p:menuitem
                            components. This component is placed inside the Spark theme jar so this jar must be in your classpath. Demo application features an example menu created declaratively however since this component is a JSF component, you can also use PrimeFaces MenuModel API
                            to create the menu dynamically. Optional "options" facet can be used to display custom content in menubar.
                        </p>
                        
                        <p>
                            Above the menubar, an additional topbar menu is provided. This menu is also responsive and provides two level of nested menus.
                        </p>
                        
                        <p>
                            In addition, jQuery and PrimeFaces.js files must be available on the page for menu to work. These files are included automatically whenever there is a PrimeFaces component on the page that
                            depends on them, however you can easily add them manually if required using h:outputScript component with name attribute values jquery/jquery.js and primefaces.js correspondingly under primefaces library. An example would be
                            <i>&lt;h:outputScript name="jquery/jquery.js" library="primefaces" /&gt;</i>
                        </p>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>

                    
                    <div class="ContainerIndent">
                        <h1 class="TexAlCenter gray Fs30">
                            <span class="red Fs30">Core Layout<br/></span>
                        </h1>
                        <p class="leaden-back" style="color:#778D9B">
                            Core Layout is a set of CSS classes used to create responsive grid layouts with additional utilities. Spark uses Core Layout internally, however for grid layout
                            you may also choose another utility like <a href="http://www.primefaces.org/showcase/ui/panel/grid.xhtml">Grid CSS</a> or <a href="http://getbootstrap.com/examples/grid/">Bootstrap Grid</a>.
                        </p>
                    </div>
                    
                    <p:panel styleClass="leaden-back">
                        <div class="Fs20 TexAlCenter red">Responsive Mode</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" styleClass="Wid100">
                            <h:outputText value="Class Group" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" styleClass="orange Fs20 Wid40"/>

                            <h:outputText value="Responsive Mode" styleClass="Fs20" escape="false"/>
                            <h:outputText value="Responsive" styleClass="hardblue" escape="false"/>
                            <h:outputText value="Makes an element responsive using media queries. For example; &lt;br /&gt;
                                          if screen width is smaller than 1200px and bigger than 960px, this element's width sets to '33%', &lt;br /&gt;
                                          and if screen width is smaller than 960px and bigger than 640px, this element's width sets to '50%', &lt;br /&gt;
                                          and if screen width smaller than 640px, this element's width sets to '100%'. &lt;br /&gt;
                                          Thus, width of this element adjusted to screen resolution on mobile phones and tablets. &lt;br /&gt;
                                          Resize browser window to see changes of bordered ContainerX boxes below." escape="false"/>
                            
                            <h:outputText value="" styleClass="Fs20" escape="false"/>
                            <h:outputText value="Responsive50" styleClass="hardblue" escape="false"/>
                            <h:outputText value="Makes an element responsive using media queries. For example; &lt;br /&gt;
                                          if screen width is smaller than 960px, this element's width sets to '100%', &lt;br /&gt;
                                          Thus, width of this element adjusted to screen resolution on mobile phones and tablets. &lt;br /&gt;
                                          Resize browser window to see changes of bordered ContainerX boxes below.&lt;br /&gt;" escape="false"/>
                            
                            <h:outputText value="" styleClass="Fs20" escape="false"/>
                            <h:outputText value="Responsive100" styleClass="hardblue" escape="false"/>
                            <h:outputText value="Makes an element responsive using media queries. For example; &lt;br /&gt;
                                          if screen width is smaller than 1200px, this element's width sets to '100%', &lt;br /&gt;
                                          Thus, width of this element adjusted to screen resolution on mobile phones and tablets. &lt;br /&gt;
                                          Resize browser window to see changes of bordered ContainerX boxes below.&lt;br /&gt;" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel styleClass="leaden-back">
                        <div class="Container">
                            <div class="Container33 blue Responsive"><div class="ContainerIndent BorderedBox"><div class="ContainerIndent">Responsive Element (With Container33 Class)</div></div></div>
                            <div class="Container33 blue Responsive"><div class="ContainerIndent BorderedBox"><div class="ContainerIndent">Responsive Element (With Container33 Class)</div></div></div>
                            <div class="Container33 blue Responsive"><div class="ContainerIndent BorderedBox"><div class="ContainerIndent">Responsive Element (With Container33 Class)</div></div></div>
                            <div class="EmptyBox10"></div>
                            <div class="Container60 blue Responsive50"><div class="ContainerIndent BorderedBox"><div class="ContainerIndent">Responsive50 Element (With Container60 Class)</div></div></div>
                            <div class="Container20 blue Responsive50"><div class="ContainerIndent BorderedBox"><div class="ContainerIndent">Responsive50 Element (With Container20 Class)</div></div></div>
                            <div class="Container20 blue Responsive50"><div class="ContainerIndent BorderedBox"><div class="ContainerIndent">Responsive50 Element (With Container20 Class)</div></div></div>
                            <div class="EmptyBox10"></div>
                            <div class="Container50 blue Responsive100"><div class="ContainerIndent BorderedBox"><div class="ContainerIndent">Responsive100 Element (With Container50 Class)</div></div></div>
                            <div class="Container20 blue Responsive100"><div class="ContainerIndent BorderedBox"><div class="ContainerIndent">Responsive100 Element (With Container20 Class)</div></div></div>
                            <div class="Container30 blue Responsive100"><div class="ContainerIndent BorderedBox"><div class="ContainerIndent">Responsive100 Element (With Container30 Class)</div></div></div>
                            <div class="EmptyBox30"></div>
                            <div class="Container50 Responsive50">
                                <div class="ContainerIndent">
                                    <p:dataList value="#{dataListView.cars1}" var="car" type="ordered">
                                        <f:facet name="header">
                                            DataList in <span class="black">Container50 Responsive50</span>
                                        </f:facet>
                                        #{car.brand}, #{car.year}
                                    </p:dataList>
                                </div>
                            </div>
                            <div class="Container50 Responsive50">
                                <div class="ContainerIndent">
                                    <h:form id="form2">
                                        <p:dataList value="#{dataListView.cars3}" var="car" type="unordered" itemType="none" paginator="true" rows="7" styleClass="paginated">
                                            <f:facet name="header">
                                                DataList - Paginator in <span class="black">Container50 Responsive50</span>
                                            </f:facet>
                                            <p:commandLink update=":form2:carDetail" oncomplete="PF('carDialog2').show()" title="View Detail" styleClass="" style="margin-right:10px;">
                                                <f:setPropertyActionListener value="#{car}" target="#{dataListView.selectedCar}" />
                                                <i class="fa fa-table gray Fs18" style="margin-top:5px;"></i>
                                            </p:commandLink>

                                            <h:outputText value="#{car.brand}, #{car.year}" style="display:inline-block"/>
                                        </p:dataList>

                                        <p:dialog header="Car Info" widgetVar="carDialog2" modal="true" showEffect="blind" hideEffect="explode" resizable="false">
                                            <p:outputPanel id="carDetail" style="text-align:center;">
                                                <p:panelGrid  columns="2" rendered="#{not empty dataListView.selectedCar}" columnClasses="label,value">
                                                    <f:facet name="header">
                                                        <p:graphicImage name="demo/images/car/#{dataListView.selectedCar.brand}-big.gif"/> 
                                                    </f:facet>

                                                    <h:outputText value="Id:" />
                                                    <h:outputText value="#{dataListView.selectedCar.id}" />

                                                    <h:outputText value="Year" />
                                                    <h:outputText value="#{dataListView.selectedCar.year}" />

                                                    <h:outputText value="Color:" />
                                                    <h:outputText value="#{dataListView.selectedCar.color}" style="color:#{dataListView.selectedCar.color}"/>

                                                    <h:outputText value="Price" />
                                                    <h:outputText value="\$#{dataListView.selectedCar.price}" />
                                                </p:panelGrid>
                                            </p:outputPanel>
                                        </p:dialog>
                                    </h:form>
                                </div>
                            </div>
                            <div class="Container60 Responsive100">
                                <div class="ContainerIndent">
                                    <h:form>
                                        <p:treeTable value="#{treeSelectionView.root1}" var="document" selectionMode="single" style="margin-top:0">
                                            <f:facet name="header">
                                                Single TreeTable in <span class="black">Container60 Responsive100</span>
                                            </f:facet>
                                            <p:column headerText="Name" sortBy="#{document.name}">
                                                <h:outputText value="#{document.name}" />
                                            </p:column>
                                            <p:column headerText="Size">
                                                <h:outputText value="#{document.size}" />
                                            </p:column>
                                            <p:column headerText="Type">
                                                <h:outputText value="#{document.type}" />
                                            </p:column>
                                            <f:facet name="footer">TreeTable Footer</f:facet>
                                        </p:treeTable>
                                    </h:form>
                                </div>
                            </div>
                            <div class="Container40 Responsive100">
                                <div class="ContainerIndent">
                                    <h:form>
                                        <p:treeTable value="#{treeSelectionView.root2}" var="document" selectionMode="checkbox" selection="#{treeSelectionView.selectedNodes1}">
                                            <f:facet name="header">
                                                Checkbox TreeTable in <span class="black">Container40 Responsive100</span>
                                            </f:facet>
                                            <p:column headerText="Name">
                                                <h:outputText value="#{document.name}" />
                                            </p:column>
                                            <p:column headerText="Size">
                                                <h:outputText value="#{document.size}" />
                                            </p:column>
                                            <p:column headerText="Type">
                                                <h:outputText value="#{document.type}" />
                                            </p:column>
                                        </p:treeTable>
                                    </h:form>
                                </div>
                            </div>
                        </div>
                    </p:panel>

                    <div class="EmptyBox30"></div>
                    
                    <p:panel styleClass="leaden-back">
                        <div class="Fs20 TexAlCenter red">ContainerX's</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" styleClass="Wid100">
                            <h:outputText value="Class Group" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" styleClass="orange Fs20 Wid40"/>

                            <h:outputText value="Containers (For Responsive Layout)" styleClass="Fs20" escape="false"/>
                            <h:outputText value="Container100 &lt;br /&gt; Container96 &lt;br /&gt; Container90 &lt;br /&gt; Container85 &lt;br /&gt; Container80  &lt;br /&gt; Container75
                                           &lt;br /&gt; Container70 &lt;br /&gt; Container60  &lt;br /&gt; Container50  &lt;br /&gt; Container40  &lt;br /&gt; Container33 &lt;br /&gt; Container30
                                            &lt;br /&gt; Container25 &lt;br /&gt; Container20 &lt;br /&gt; Container10 &lt;br /&gt; Container5" class="hardblue" escape="false"/>
                            <h:outputText value="ContinerX is the essential part of grid layout where the number x defines the width of the cell. In order to make a ContainerX
                                          responsive, one of the Responsive style classes described in previous section should be added. In addition, since they float, a class called
                                          Container should be the parent to clear the floats.
                                          Resize browser window to see changes of red and orange boxes below. &lt;br /&gt; &lt;br /&gt;
                                          
                                          .Container100{ width:100%; overflow:hidden; float:left;} &lt;br /&gt; 
                                        .Container96{ width:96%; float:left;} &lt;br /&gt;
                                        .Container90{ width:90%; float:left;} &lt;br /&gt;
                                        .Container85{ width:85%; float:left;} &lt;br /&gt;
                                        .Container80{ width:80%; float:left;} &lt;br /&gt;
                                        .Container75{ width:75%; float:left;} &lt;br /&gt; 
                                        .Container70{ width:70%; float:left;} &lt;br /&gt;
                                        .Container60{ width:60%; float:left;} &lt;br /&gt;
                                        .Container50{ width:50%; float:left;} &lt;br /&gt;
                                        .Container40{ width:40%; float:left;} &lt;br /&gt;
                                        .Container33{ width:33.3%; float:left;} &lt;br /&gt;
                                        .Container30{ width:30%; float:left;} &lt;br /&gt;
                                        .Container25{ width:25%; float:left;} &lt;br /&gt;
                                        .Container20{ width:20%; float:left;} &lt;br /&gt;
                                        .Container10{ width:10%; float:left;} &lt;br /&gt;
                                        .Container5{ width:5%; overflow:hidden; float:left;} &lt;br /&gt;" escape="false"/>
                            
                            <h:outputText value="Indent" class="Fs20" escape="false"/>
                            <h:outputText value="ContainerIndent" class="hardblue" escape="false"/>
                            <h:outputText value="ContainerIndent is optional and added inside a ContainerX class to apply formatting such as padding." escape="false"/>
                        
                            <h:outputText value="Container" class="Fs20" escape="false"/>
                            <h:outputText value="Wrapper" class="hardblue" escape="false"/>
                            <h:outputText value="Container is used as the wrapper of ContainerX elements to clear the floats." escape="false"/>
                        
                        </p:panelGrid>
                    </p:panel>
                    <p:panel styleClass="leaden-back TexAlCenter">
                        <div class="Container">
                            <div class="Fleft BorderedBox red Container20 MarAuto Responsive"> <br/>Container20 - Responsive<br/><br/> </div>
                            <div class="Fleft BorderedBox red Container30 MarAuto Responsive"> <br/>Container30 - Responsive<br/><br/> </div>
                            <div class="Fleft BorderedBox red Container50 MarAuto Responsive"> <br/>Container50 - Responsive<br/><br/> </div>
                            <div class="EmptyBox10"></div>
                            <div class="Fleft BorderedBox orange Container33 MarAuto Responsive"> <br/>Container33 - Responsive<br/><br/> </div>
                            <div class="Fleft BorderedBox orange Container33 MarAuto Responsive"> <br/>Container33 - Responsive<br/><br/> </div>
                            <div class="Fleft BorderedBox orange Container33 MarAuto Responsive"> <br/>Container33 - Responsive<br/><br/> </div>
                            <div class="EmptyBox10"></div>
                            <div class="Fleft red BorderedBox Container40 MarAuto Responsive">Container40<div class="ContainerIndent BorderedBox blue">Container Indent</div></div>
                        </div>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>
                    
                    <p:panel styleClass="leaden-back">
                        <div class="Fs20 TexAlCenter red">Text Colors</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" styleClass="Wid100">
                            <h:outputText value="Class Group" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" styleClass="orange Fs20 Wid40"/>

                            <h:outputText value="Text Coloring" styleClass="Fs20 Wid30" escape="false"/>
                            <h:outputText value="red &lt;br /&gt; blue &lt;br /&gt; green &lt;br /&gt; orange &lt;br /&gt; white &lt;br /&gt; white &lt;br /&gt; softgray &lt;br /&gt;
                                          gray &lt;br /&gt; black &lt;br /&gt;" class="hardblue Wid30" escape="false"/>
                            <h:outputText value="Texts paint the selected color &lt;br /&gt; &lt;br /&gt; 
                                          .red{color:#D0525D;} &lt;br /&gt;
                                            .blue{color:#33AFDE;} &lt;br /&gt;
                                            .green{color:#5fcf80;} &lt;br /&gt;
                                            .orange{color:#F7941E;} &lt;br /&gt;
                                            .white{color:#F1F6F9;} &lt;br /&gt;
                                            .softgray{color:#C3CCD5;} &lt;br /&gt;
                                            .gray{color:#778D9B;} &lt;br /&gt;
                                            .black{color:#3B3D3F;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel styleClass="leaden-back">
                        <div class="Container">
                            <div class="Container20 Responsive FontRalewayBold"><div class="ContainerIndent"><div class="red Fs18">Red Text</div></div></div>
                            <div class="Container20 Responsive FontRalewayBold"><div class="ContainerIndent"><div class="blue Fs18">Blue Text</div></div></div>
                            <div class="Container20 Responsive FontRalewayBold"><div class="ContainerIndent"><div class="green Fs18">Green Text</div></div></div>
                            <div class="Container20 Responsive FontRalewayBold"><div class="ContainerIndent"><div class="orange Fs18">Orange Text</div></div></div>
                            <div class="Container20 Responsive FontRalewayBold" style="background-color:#3B3D3F;"><div class="ContainerIndent"><div class="white Fs18">White Text</div></div></div>
                            <div class="Container20 Responsive FontRalewayBold"><div class="ContainerIndent"><div class="softgray Fs18">Soft Gray Text</div></div></div>
                            <div class="Container20 Responsive FontRalewayBold"><div class="ContainerIndent"><div class="gray Fs18">Gray Text</div></div></div>
                            <div class="Container20 Responsive FontRalewayBold"><div class="ContainerIndent"><div class="black Fs18">Black Text</div></div></div>
                        </div>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>
                    
                    <p:panel styleClass="leaden-back">
                        <div class="Fs20 TexAlCenter red">Selection</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" styleClass="Wid100">
                            <h:outputText value="Class Group" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" styleClass="orange Fs20 Wid40"/>

                            <h:outputText value="Selection" styleClass="Fs20 Wid30" escape="false"/>
                            <h:outputText value="Unselectable" styleClass="hardblue Wid30" escape="false"/>
                            <h:outputText value="Makes text unselectable &lt;br /&gt; &lt;br /&gt; 
                                          .Unselectable { -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel styleClass="leaden-back">
                        <div class="Container">
                            <div class="Container100 red Responsive"><div class="ContainerIndent"><div class="ContainerIndent Unselectable">This is unselectable text</div></div></div>
                        </div>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>
                    
                    <p:panel styleClass="leaden-back">
                        <div class="Fs20 TexAlCenter red">Visibilites, Floating And Width Settings on Devices</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" styleClass="Wid100">
                            <h:outputText value="Class Group" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" styleClass="orange Fs20 Wid40"/>

                            <h:outputText value="Visibilities According To The Platform" styleClass="Fs20 Wid30" escape="false"/>
                            <h:outputText value="ShowOnMobile" styleClass="hardblue Wid30" escape="false"/>
                            <h:outputText value="Only visible on screen widths smaller than 960px." escape="false"/>
                            
                            <h:outputText value="" styleClass="Fs20 Wid30" escape="false"/>
                            <h:outputText value="ShowOnDesktop" styleClass="hardblue Wid30" escape="false"/>
                            <h:outputText value="Only visible on screen widths bigger than 960px." escape="false"/>
                            
                            <h:outputText value="Floating According To The Platform" styleClass="Fs20 Wid30" escape="false"/>
                            <h:outputText value="FloatNoneOnMobile" styleClass="hardblue Wid30" escape="false"/>
                            <h:outputText value="Removes floating on screen widths smaller than 960px." escape="false"/>
                            
                            <h:outputText value="Width Setting For The Platform" styleClass="Fs20 Wid30" escape="false"/>
                            <h:outputText value="WidAutoOnMobile" styleClass="hardblue Wid30" escape="false"/>
                            <h:outputText value="Switches to auto width on screen widths smaller than 640px so that element with depends on its content." escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel styleClass="leaden-back">
                        <div class="Container">
                            <div class="Container100">
                                <div class="Container70 Responsive50">
                                    <p:inputText styleClass="Fleft Wid90 ShowOnMobile" placeholder="Only visible if screen width is smaller than 960px."/>
                                    <div class="EmptyBox10"></div>
                                    <p:inputText styleClass="Fleft Wid90 ShowOnDesktop" placeholder="Only visible if screen width is bigger than 960px."/>
                                    <div class="EmptyBox10"></div>
                                    <p:inputText styleClass="Fleft Wid90" placeholder="Cc;"/>
                                </div>
                                <div class="EmptyBox10 ShowOnMobile"></div>
                                <div class="Container30 Responsive50">
                                    <p:inputTextarea rows="5" placeholder="Floating is removed if screen width is smaller than 960px" styleClass="Wid90 Fright FloatNoneOnMobile"/>
                                </div>
                            </div>

                            <div class="EmptyBox10"></div>
                            <div class="Seperator"></div>
                            <div class="EmptyBox10"></div>

                            <div class="Container100">
                                <div class="Container40 Responsive50">
                                    <p:inputText styleClass="Fleft Wid90" placeholder="InputField 1"/>
                                    <div class="EmptyBox10"></div>
                                    <p:inputText styleClass="Fleft Wid90" placeholder="InputField 2"/>
                                    <div class="EmptyBox10"></div>
                                    <p:inputText styleClass="Fleft Wid90" placeholder="InputField 3"/>
                                </div>
                                <div class="EmptyBox10 ShowOnMobile"></div>
                                <div class="Container60 Responsive50">
                                    <p:inputTextarea rows="5" placeholder="This element is floated right and will still be floated on smaller screens causing layout issues since it does not have FloatNoneOnMobile." styleClass="Wid90 Fright"/>
                                </div>
                            </div>

                            <div class="EmptyBox10"></div>
                            <div class="Seperator"></div>
                            <div class="EmptyBox10"></div>

                            <div class="Container30 BorderedBox red WidAutoOnMobile">
                                <div class="ContainerIndent">This element has 30% width on bigger screens and auto width on smaller screens as it uses WidAutoOnMobile.</div>
                            </div>
                        </div>
                    </p:panel>

                    <div class="EmptyBox30"></div>

                    <p:panel styleClass="leaden-back">
                        <div class="Fs20 TexAlCenter red">Displaying</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" styleClass="Wid100">
                            <h:outputText value="Class Group" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" styleClass="orange Fs20 Wid40"/>

                            <h:outputText value="Displaying" styleClass="Fs20" escape="false"/>
                            <h:outputText value="DispBlock" styleClass="hardblue" escape="false"/>
                            <h:outputText value="Displays an element as a block element &lt;br /&gt; &lt;br /&gt;
                                          .DispBlock{ display:block;}" escape="false"/>

                            <h:outputText value="" styleClass="Fs20" escape="false"/>
                            <h:outputText value="DispNone" styleClass="hardblue" escape="false"/>
                            <h:outputText value="The element will not be displayed at all (has no effect on layout)&lt;br /&gt; &lt;br /&gt;
                                          .DispNone{display:none;}" escape="false"/>

                            <h:outputText value="" styleClass="Fs20" escape="false"/>
                            <h:outputText value="DispTable" styleClass="hardblue" escape="false"/>
                            <h:outputText value="Let the element behave like a table element &lt;br /&gt; &lt;br /&gt;
                                          .DispTable{display:table;}" escape="false"/>

                            <h:outputText value="" styleClass="Fs20" escape="false"/>
                            <h:outputText value="DispInlBlock" styleClass="hardblue" escape="false"/>
                            <h:outputText value="Displays an element as an inline-level block container. The inside of this block is formatted as block-level box, and the element itself is formatted as an inline-level box &lt;br /&gt; &lt;br /&gt;
                                          .DispInlBlock{display:inline-block;}" escape="false"/>

                            <h:outputText value="" styleClass="Fs20" escape="false"/>
                            <h:outputText value="DispTableCell" styleClass="hardblue" escape="false"/>
                            <h:outputText value="Let the element behave like a td element &lt;br /&gt; &lt;br /&gt;
                                          .DispTableCell{ display:table-cell; vertical-align:middle;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>

                    <div class="EmptyBox30"></div>

                    <p:panel styleClass="leaden-back">
                        <div class="Fs20 TexAlCenter red">Positioning</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" styleClass="Wid100">
                            <h:outputText value="Class Group" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" styleClass="orange Fs20 Wid40"/>

                            <h:outputText value="Positioning" styleClass="Fs20" escape="false"/>
                            <h:outputText value="PosFixed" styleClass="hardblue" escape="false"/>
                            <h:outputText value="The element is positioned relative to the browser window &lt;br /&gt; &lt;br /&gt;
                                          .PosFixed{position:fixed;}" escape="false"/>

                            <h:outputText value="" styleClass="Fs20" escape="false"/>
                            <h:outputText value="PosAbsolute" styleClass="hardblue" escape="false"/>
                            <h:outputText value="The element is positioned relative to its first positioned (not static) ancestor element &lt;br /&gt; &lt;br /&gt;
                                          .PosAbsolute{position:absolute;}" escape="false"/>

                            <h:outputText value="" styleClass="Fs20" escape="false"/>
                            <h:outputText value="PosRelative" styleClass="hardblue" escape="false"/>
                            <h:outputText value="The element is positioned relative to its normal position, so 'left:20' adds 20 pixels to the element's LEFT position &lt;br /&gt; &lt;br /&gt;
                                          .PosRelative{ position:relative;}" escape="false"/>

                            <h:outputText value="" styleClass="Fs20" escape="false"/>
                            <h:outputText value="PosStatic" styleClass="hardblue" escape="false"/>
                            <h:outputText value="Default value. Elements render in order, as they appear in the document flow &lt;br /&gt; &lt;br /&gt;
                                          .PosStatic{position:static;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>

                    <div class="EmptyBox30"></div>

                    <p:panel styleClass="leaden-back">
                        <div class="Fs20 TexAlCenter red">Underline</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" styleClass="Wid100">
                            <h:outputText value="Class Group" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" styleClass="orange Fs20 Wid40"/>

                            <h:outputText value="Text Decoration" styleClass="Fs20" escape="false"/>
                            <h:outputText value="Underline" styleClass="hardblue" escape="false"/>
                            <h:outputText value="Defines a line below the text &lt;br /&gt; &lt;br /&gt;
                                          .Underline{ text-decoration:underline;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel styleClass="leaden-back">
                        <div class="Underline TexAlCenter">This is underlined text</div>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>

                    <p:panel styleClass="leaden-back">
                        <div class="Fs20 TexAlCenter red">Floating</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" styleClass="Wid100">
                            <h:outputText value="Class Group" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" styleClass="orange Fs20 Wid40"/>

                            <h:outputText value="Floating" styleClass="Fs20" escape="false"/>
                            <h:outputText value="Fleft" styleClass="hardblue" escape="false"/>
                            <h:outputText value="The element floats to the left &lt;br /&gt; &lt;br /&gt;
                                          .Fleft{ float:left;}" escape="false"/>
                            
                            <h:outputText value="" styleClass="Fs20" escape="false"/>
                            <h:outputText value="Fright" styleClass="hardblue" escape="false"/>
                            <h:outputText value="The element floats to the right &lt;br /&gt; &lt;br /&gt;
                                          .Fleft{ float:right;}" escape="false"/>
                            
                            <h:outputText value="" styleClass="Fs20" escape="false"/>
                            <h:outputText value="Fnone" styleClass="hardblue" escape="false"/>
                            <h:outputText value="The element is not floated, and will be displayed just where it occurs in the text. &lt;br /&gt; &lt;br /&gt;
                                          .Fleft{ float:none;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel styleClass="leaden-back">
                        <div class="Container">
                            <div class="Fleft BorderedBox orange  Wid20">This is floats to the left</div>
                            <div class="Fright BorderedBox orange  Wid20">This is floats to the right</div>
                            <div class="Fnone BorderedBox orange  Wid20">This is not floated (default)</div>
                        </div>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>

                    <p:panel styleClass="leaden-back">
                        <div class="Fs20 TexAlCenter red">Overflows</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" styleClass="Wid100">
                            <h:outputText value="Class Group" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" styleClass="orange Fs20 Wid40"/>

                            <h:outputText value="Overflow" styleClass="Fs20" escape="false"/>
                            <h:outputText value="OvHidden" styleClass="hardblue" escape="false"/>
                            <h:outputText value="The overflow is clipped, and the rest of the content will be invisible &lt;br /&gt; &lt;br /&gt;
                                          .OvHidden{ overflow:hidden;}" escape="false"/>
                            
                            <h:outputText value="" styleClass="Fs20" escape="false"/>
                            <h:outputText value="OvScroll" styleClass="hardblue" escape="false"/>
                            <h:outputText value="The overflow is clipped, but a scroll-bar is added to see the rest of the content &lt;br /&gt; &lt;br /&gt;
                                          .OvScroll{ overflow:scroll;}" escape="false"/>
                            
                            <h:outputText value="" styleClass="Fs20" escape="false"/>
                            <h:outputText value="OvAuto" styleClass="hardblue" escape="false"/>
                            <h:outputText value="If overflow is clipped, a scroll-bar should be added to see the rest of the content &lt;br /&gt; &lt;br /&gt;
                                          .OvAuto{ overflow:auto;}" escape="false"/>
                            
                            <h:outputText value="" styleClass="Fs20" escape="false"/>
                            <h:outputText value="OvVisible" styleClass="hardblue" escape="false"/>
                            <h:outputText value="The overflow is not clipped. It renders outside the element's box. &lt;br /&gt; &lt;br /&gt;
                                          .OvVisible{ overflow:visible;}" escape="false"/>
                            
                            <h:outputText value="" styleClass="Fs20" escape="false"/>
                            <h:outputText value="OvXScroll &lt;br /&gt; OvYScroll &lt;br /&gt; OvXHidden &lt;br /&gt; OvYHidden" styleClass="hardblue" escape="false"/>
                            <h:outputText value="Axis of the elements (X or Y) mentioned were hidden or scroll &lt;br /&gt; &lt;br /&gt;
                                          .OvXScroll{ overflow-x:scroll;} , .OvYScroll{ overflow-y:scroll;} , .OvXHidden{ overflow-x:hidden;} , .OvYHidden{ overflow-y:hidden;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel styleClass="leaden-back TexAlCenter">
                        <p:button href="http://www.w3schools.com/cssref/pr_pos_overflow.asp" value="Get More Info About Overflows" target="_blank"/>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>
                    
                    <p:panel styleClass="leaden-back">
                        <div class="Fs20 TexAlCenter red">Empty Boxes</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" styleClass="Wid100">
                            <h:outputText value="Class Group" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" styleClass="orange Fs20 Wid40"/>

                            <h:outputText value="Empty Boxes" styleClass="Fs20" escape="false"/>
                            <h:outputText value="EmptyBox5 &lt;br /&gt; EmptyBox10 &lt;br /&gt; EmptyBox20 &lt;br /&gt; EmptyBox30 &lt;br /&gt; EmptyBox40 &lt;br /&gt; EmptyBox50
                                          &lt;br /&gt; EmptyBox60 &lt;br /&gt; EmptyBox70 &lt;br /&gt; EmptyBox80 &lt;br /&gt; EmptyBox90 &lt;br /&gt; EmptyBox100 &lt;br /&gt; EmptyBox110
                                          &lt;br /&gt; EmptyBox120 &lt;br /&gt; EmptyBox130 &lt;br /&gt; EmptyBox140 &lt;br /&gt; EmptyBox150" styleClass="hardblue" escape="false"/>
                            <h:outputText value="Horizontally , leaving space so that the value of the specified number of pixels &lt;br /&gt; &lt;br /&gt;
                                          .EmptyBox5{ display:block; width:100%; height:5px; overflow:hidden;} &lt;br /&gt; 
                                        .EmptyBox10{ display:block; width:100%; height:10px; overflow:hidden;} &lt;br /&gt;
                                        .EmptyBox20{ display:block; width:100%; height:20px; overflow:hidden;} &lt;br /&gt;
                                        .EmptyBox30{ display:block; width:100%; height:30px; overflow:hidden;} &lt;br /&gt;
                                        .EmptyBox40{ display:block; width:100%; height:40px; overflow:hidden;} &lt;br /&gt;
                                        .EmptyBox50{ display:block; width:100%; height:50px; overflow:hidden;} &lt;br /&gt;
                                        .EmptyBox60{ display:block; width:100%; height:60px; overflow:hidden;} &lt;br /&gt;
                                        .EmptyBox70{ display:block; width:100%; height:70px; overflow:hidden;} &lt;br /&gt;
                                        .EmptyBox80{ display:block; width:100%; height:80px; overflow:hidden;} &lt;br /&gt;
                                        .EmptyBox90{ display:block; width:100%; height:90px; overflow:hidden;} &lt;br /&gt;
                                        .EmptyBox100{ display:block; width:100%; height:100px; overflow:hidden;} &lt;br /&gt;
                                        .EmptyBox110{ display:block; width:100%; height:100px; overflow:hidden;} &lt;br /&gt;
                                        .EmptyBox120{ display:block; width:100%; height:100px; overflow:hidden;} &lt;br /&gt;
                                        .EmptyBox130{ display:block; width:100%; height:100px; overflow:hidden;} &lt;br /&gt;
                                        .EmptyBox140{ display:block; width:100%; height:100px; overflow:hidden;} &lt;br /&gt;
                                        .EmptyBox150{ display: block; width: 100%; height:150px; overflow:hidden;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel styleClass="leaden-back TexAlCenter">
                        <div class="BorderedBox red PadWithBorder10 Wid20 MarAuto">Content</div>
                        <div class="EmptyBox30">this is empty box with 30px height value (EmptyBox30)</div>
                        <div class="BorderedBox red PadWithBorder10 Wid20 MarAuto">Content</div>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>
                    
                    <p:panel styleClass="leaden-back">
                        <div class="Fs20 TexAlCenter red">Opacity</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" styleClass="Wid100">
                            <h:outputText value="Class Group" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" styleClass="orange Fs20 Wid40"/>

                            <h:outputText value="Opacity" styleClass="Fs20" escape="false"/>
                            <h:outputText value="OpacZero &lt;br /&gt; Opac10 &lt;br /&gt; Opac20 &lt;br /&gt; Opac30 &lt;br /&gt; Opac40 &lt;br /&gt; Opac50 &lt;br /&gt; Opac60 
                                          &lt;br /&gt; Opac70 &lt;br /&gt; Opac80 &lt;br /&gt; Opac90 &lt;br /&gt; Opac95 &lt;br /&gt; Opac100" styleClass="hardblue" escape="false"/>
                            <h:outputText value="Element gives transparency specified value &lt;br /&gt; &lt;br /&gt;
                                          .Opac100{ opacity:1; -webkit-opacity:1; -moz-opacity:1;} ,
                                        .Opac95{ opacity:0.95; -webkit-opacity:0.95; -moz-opacity:0.95;} &lt;br /&gt;
                                        .Opac90{ opacity:0.9; -webkit-opacity:0.9; -moz-opacity:0.9;} &lt;br /&gt;
                                        .Opac80{ opacity:0.8; -webkit-opacity:0.8; -moz-opacity:0.8;} &lt;br /&gt;
                                        .Opac70{ opacity:0.7; -webkit-opacity:0.7; -moz-opacity:0.7;} &lt;br /&gt;
                                        .Opac60{ opacity:0.6; -webkit-opacity:0.6; -moz-opacity:0.6;} &lt;br /&gt;
                                        .Opac50{ opacity:0.5; -webkit-opacity:0.5; -moz-opacity:0.5;} &lt;br /&gt;
                                        .Opac40{ opacity:0.4; -webkit-opacity:0.4; -moz-opacity:0.4;} &lt;br /&gt;
                                        .Opac30{ opacity:0.3; -webkit-opacity:0.3; -moz-opacity:0.3;} &lt;br /&gt;
                                        .Opac20{ opacity:0.2; -webkit-opacity:0.2; -moz-opacity:0.2;} &lt;br /&gt;
                                        .Opac10{ opacity:0.1; -webkit-opacity:0.1; -moz-opacity:0.1;} &lt;br /&gt;
                                        .OpacZero{ opacity:0; -webkit-opacity:0; -moz-opacity:0;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel styleClass="leaden-back TexAlCenter">
                        <div class="Container">
                            <div class="Fleft BorderedBox red PadWithBorder10 Wid20 MarAuto Opac10">Opac10</div>
                            <div class="Fleft BorderedBox red PadWithBorder10 Wid20 MarAuto Opac30">Opac30</div>
                            <div class="Fleft BorderedBox red PadWithBorder10 Wid20 MarAuto Opac50">Opac50</div>
                            <div class="Fleft BorderedBox red PadWithBorder10 Wid20 MarAuto Opac70">Opac70</div>
                            <div class="Fleft BorderedBox red PadWithBorder10 Wid20 MarAuto Opac100">Opac100</div>
                        </div>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>
                    
                    <p:panel styleClass="leaden-back">
                        <div class="Fs20 TexAlCenter red">WidX's</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" styleClass="Wid100">
                            <h:outputText value="Class Group" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" styleClass="orange Fs20 Wid40"/>

                            <h:outputText value="Width Special Values" styleClass="Fs20" escape="false"/>
                            <h:outputText value="Wid100 &lt;br /&gt; Wid90 &lt;br /&gt; Wid80 &lt;br /&gt; Wid70 &lt;br /&gt; Wid60 &lt;br /&gt; Wid50 &lt;br /&gt; Wid45 &lt;br /&gt; Wid40
                                          &lt;br /&gt; Wid33 &lt;br /&gt; Wid30 &lt;br /&gt; Wid25 &lt;br /&gt; Wid20 &lt;br /&gt; Wid10" styleClass="hardblue" escape="false"/>
                            <h:outputText value="Element data width is specified with a percentage value. Add Responsive class to apply responsive features.&lt;br /&gt; &lt;br /&gt;
                                          .Wid100{ width:100%;} , 
                                        .Wid90{ width:90%;} , 
                                        .Wid80{ width:80%;} , 
                                        .Wid70{ width:70%;} , 
                                        .Wid60{ width:60%;} , 
                                        .Wid50{ width:50%;} , 
                                        .Wid45{ width:45%;} , 
                                        .Wid40{ width:40%;} , 
                                        .Wid30{ width:30%;} , 
                                        .Wid33{ width:33.3%;} , 
                                        .Wid25{ width:25%;} , 
                                        .Wid20{ width:20%;} , 
                                        .Wid10{ width:10%;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel styleClass="leaden-back TexAlCenter">
                        <div class="Container">
                            <div class="Fleft BorderedBox red Wid20 MarAuto Responsive"> <br/>Wid20 - Responsive<br/><br/> </div>
                            <div class="Fleft BorderedBox red Wid20 MarAuto"> <br/>Wid20<br/><br/> </div>
                            <div class="Fleft BorderedBox red Wid20 MarAuto"> <br/>Wid20<br/><br/> </div>
                            <div class="Fleft BorderedBox red Wid20 MarAuto Responsive"> <br/>Wid20 - Responsive<br/><br/> </div>
                            <div class="Fleft BorderedBox red Wid20 MarAuto"> <br/>Wid20<br/><br/> </div>
                            <div class="EmptyBox10"></div>
                            <div class="Fleft BorderedBox red Wid33 MarAuto Responsive"> <br/>Wid33 - Reponsive<br/><br/> </div>
                            <div class="Fleft BorderedBox red Wid33 MarAuto Responsive"> <br/>Wid33 - Reponsive<br/><br/> </div>
                            <div class="Fleft BorderedBox red Wid33 MarAuto Responsive"> <br/>Wid33 - Reponsive<br/><br/> </div>
                        </div>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>
                    
                    <p:panel styleClass="leaden-back">
                        <div class="Fs20 TexAlCenter red">Text Aligning</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" styleClass="Wid100">
                            <h:outputText value="Class Group" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" styleClass="orange Fs20 Wid40"/>

                            <h:outputText value="Text Align" styleClass="Fs20" escape="false"/>
                            <h:outputText value="TexAlCenter" styleClass="hardblue" escape="false"/>
                            <h:outputText value="Centers the text&lt;br /&gt; &lt;br /&gt;
                                          .TexAlCenter{ text-align:center;}" escape="false"/>
                            
                            <h:outputText value="" styleClass="Fs20" escape="false"/>
                            <h:outputText value="TexAlLeft" styleClass="hardblue" escape="false"/>
                            <h:outputText value="Aligns the text to the left &lt;br /&gt; &lt;br /&gt;
                                          .TexAlLeft{ text-align:left;}" escape="false"/>
                            
                            <h:outputText value="" styleClass="Fs20" escape="false"/>
                            <h:outputText value="TexAlRight" styleClass="hardblue" escape="false"/>
                            <h:outputText value="Aligns the text to the right &lt;br /&gt; &lt;br /&gt;
                                          .TexAlRight{ text-align:right;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel styleClass="leaden-back TexAlCenter">
                        <div class="Container">
                            <div class="TexAlCenter Container100">This text align center</div>
                            <div class="TexAlLeft Container100">This text align left</div>
                            <div class="TexAlRight Container100">This text align right</div>
                        </div>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>
                    
                    <p:panel styleClass="leaden-back">
                        <div class="Fs20 TexAlCenter red">Box Size</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" styleClass="Wid100">
                            <h:outputText value="Class Group" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" styleClass="orange Fs20 Wid40"/>

                            <h:outputText value="Box Sizing" styleClass="Fs20" escape="false"/>
                            <h:outputText value="BoxSizeContent" styleClass="hardblue" escape="false"/>
                            <h:outputText value="Default. The width and height properties (and min/max properties) includes only the content. Border, padding, or margin are not included &lt;br /&gt; &lt;br /&gt;
                                          .BoxSizeContent{ box-sizing:content-box; -webkit-box-sizing:content-box; -moz-box-sizing:content-box;}" escape="false"/>
                            
                            <h:outputText value="" styleClass="Fs20" escape="false"/>
                            <h:outputText value="BoxSizeBorder" styleClass="hardblue" escape="false"/>
                            <h:outputText value="The width and height properties (and min/max properties) includes content, padding and border, but not the margin &lt;br /&gt; &lt;br /&gt;
                                          .BoxSizeBorder{ box-sizing:border-box; -webkit-box-sizing:border-box; -moz-box-sizing:border-box;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel styleClass="leaden-back TexAlCenter">
                        <div class="Container">
                            <div class="BoxSizeBorder Container30 BorderedBox red" style="border:solid 10px #0bb113;"><div class="ContainerIndent">Box Sizing : BoxSizeBorder (same width with below box)</div></div>
                            <div class="EmptyBox10"></div>
                            <div class="BoxSizeContent Container30 BorderedBox red"><div class="ContainerIndent">Box Sizing : BoxSizeContent</div></div>
                        </div>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>
                    
                    <p:panel styleClass="leaden-back">
                        <div class="Fs20 TexAlCenter red">Font Sizes</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" styleClass="Wid100">
                            <h:outputText value="Class Group" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" styleClass="orange Fs20 Wid40"/>

                            <h:outputText value="Font Size" styleClass="Fs20" escape="false"/>
                            <h:outputText value="Fs130 &lt;br /&gt; Fs100 &lt;br /&gt; Fs60 &lt;br /&gt; Fs50 &lt;br /&gt; Fs40 &lt;br /&gt; Fs30 &lt;br /&gt; Fs29 &lt;br /&gt; Fs28
                                          &lt;br /&gt; Fs27 &lt;br /&gt; Fs26 &lt;br /&gt; Fs25 &lt;br /&gt; Fs24 &lt;br /&gt; Fs23 &lt;br /&gt; Fs22 &lt;br /&gt; Fs21 &lt;br /&gt; Fs20
                                          &lt;br /&gt; Fs19 &lt;br /&gt; Fs18 &lt;br /&gt; Fs17 &lt;br /&gt; Fs16 &lt;br /&gt; Fs15 &lt;br /&gt; Fs14 &lt;br /&gt; Fs13 &lt;br /&gt; Fs14
                                          &lt;br /&gt; Fs13 &lt;br /&gt; Fs12 &lt;br /&gt; Fs11 &lt;br /&gt; Fs10 &lt;br /&gt; Fs9" styleClass="hardblue" escape="false"/>
                            <h:outputText value="Set to the specified pixel value of font-size. &lt;br /&gt; &lt;br /&gt;
                                          .Fs9{font-size:9px !important;} &lt;br /&gt;
                                        .Fs10{font-size:10px !important;} &lt;br /&gt;
                                        .Fs11{font-size:11px !important;} &lt;br /&gt;
                                        .Fs12{font-size:12px !important;} &lt;br /&gt;
                                        .Fs13{font-size:13px !important;} &lt;br /&gt;
                                        .Fs14{font-size:14px !important;} &lt;br /&gt;
                                        .Fs15{font-size:15px !important;} &lt;br /&gt;
                                        .Fs16{font-size:16px !important;} &lt;br /&gt;
                                        .Fs17{font-size:17px !important;} &lt;br /&gt;
                                        .Fs18{font-size:18px !important;} &lt;br /&gt;
                                        .Fs19{font-size:19px !important;} &lt;br /&gt;
                                        .Fs20{font-size:20px !important;} &lt;br /&gt;
                                        .Fs21{font-size:21px !important;} &lt;br /&gt;
                                        .Fs22{font-size:22px !important;} &lt;br /&gt;
                                        .Fs23{font-size:23px !important;} &lt;br /&gt;
                                        .Fs24{font-size:24px !important;} &lt;br /&gt;
                                        .Fs25{font-size:25px !important;} &lt;br /&gt;
                                        .Fs26{font-size:26px !important;} &lt;br /&gt;
                                        .Fs27{font-size:27px !important;} &lt;br /&gt;
                                        .Fs28{font-size:28px !important;} &lt;br /&gt;
                                        .Fs29{font-size:29px !important;} &lt;br /&gt;
                                        .Fs30{font-size:30px !important;} &lt;br /&gt;
                                        .Fs40{font-size:40px !important;} &lt;br /&gt;
                                        .Fs50{font-size:50px !important;} &lt;br /&gt;
                                        .Fs60{font-size:60px !important;} &lt;br /&gt;
                                        .Fs100{font-size:100px !important;} &lt;br /&gt;
                                        .Fs130{font-size:130px !important;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel styleClass="leaden-back TexAlCenter">
                        <span class="Fs14">Font Size : 14px</span><br/>
                        <span class="Fs18">Font Size : 18px</span><br/>
                        <span class="Fs24">Font Size : 24px</span><br/>
                        <span class="Fs30">Font Size : 30px</span><br/>
                        <span class="Fs60">Font Size : 60px</span>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>
                    
                    <p:panel styleClass="leaden-back">
                        <div class="Fs20 TexAlCenter red">Font Weights</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" styleClass="Wid100">
                            <h:outputText value="Class Group" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" styleClass="orange Fs20 Wid40"/>

                            <h:outputText value="Font Weight" styleClass="Fs20" escape="false"/>
                            <h:outputText value="FontBold" styleClass="hardblue" escape="false"/>
                            <h:outputText value="Defines thick characters. &lt;br /&gt; &lt;br /&gt;
                                          .FontBold{ font-weight:bold;}" escape="false"/>
                            
                            <h:outputText value="" styleClass="Fs20" escape="false"/>
                            <h:outputText value="FontLight" styleClass="hardblue" escape="false"/>
                            <h:outputText value="Defines lighter characters. &lt;br /&gt; &lt;br /&gt;
                                          .FontLight{ font-weight:lighter;}" escape="false"/>
                            
                            <h:outputText value="" styleClass="Fs20" escape="false"/>
                            <h:outputText value="FontNormal" styleClass="hardblue" escape="false"/>
                            <h:outputText value="Defines normal characters. This is default. &lt;br /&gt; &lt;br /&gt;
                                          .FontNormal{ font-weight:normal;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel styleClass="leaden-back TexAlCenter" style="font-family:Verdana !important;">
                        <span class="Fs20 FontBold orange">This is bold text</span><br/>
                        <span class="Fs20 FontLighter orange">This is lighter text</span>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>
                    
                    <p:panel styleClass="leaden-back">
                        <div class="Fs20 TexAlCenter red">Transitions Timing (For CSS3 Animations)</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" styleClass="Wid100">
                            <h:outputText value="Class Group" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" styleClass="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" styleClass="orange Fs20 Wid40"/>
                            
                            <h:outputText value="Transitions Timing" styleClass="Fs20" escape="false"/>
                            <h:outputText value="Animated03" styleClass="hardblue" escape="false"/>
                            <h:outputText value="Make css3 transitions with the specified duration. ( Animated05 = Transition ends in 300 milli-seconds with easing) &lt;br /&gt; &lt;br /&gt;
                                          .Animated05{-webkit-transition: all 0.3s ease; -moz-transition: all 0.3s ease; -ms-transition: all 0.3s ease; -o-transition: all 0.3s ease; transition: all 0.3s ease;}" escape="false"/>

                            <h:outputText value="" styleClass="Fs20" escape="false"/>
                            <h:outputText value="Animated05" styleClass="hardblue" escape="false"/>
                            <h:outputText value="Make css3 transitions with the specified duration. ( Animated05 = Transition ends in 500 milli-seconds with easing) &lt;br /&gt; &lt;br /&gt;
                                          .Animated05{-webkit-transition: all 0.5s ease; -moz-transition: all 0.5s ease; -ms-transition: all 0.5s ease; -o-transition: all 0.5s ease; transition: all 0.5s ease;}" escape="false"/>
                            
                            <h:outputText value="" styleClass="Fs20" escape="false"/>
                            <h:outputText value="Animated1" styleClass="hardblue" escape="false"/>
                            <h:outputText value="Make css3 transitions with the specified duration. ( Animated1 = Transition ends in 1 second with easing) &lt;br /&gt; &lt;br /&gt;
                                          .Animated1{-webkit-transition: all 1s ease; -moz-transition: all 1s ease; -ms-transition: all 1s ease; -o-transition: all 1s ease; transition: all 1s ease;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel styleClass="leaden-back TexAlCenter">
                        <div class="Container">
                            <div class=" Animated05 changecolor Container40 white" style="margin-right: 10px; background-color:#F7941E;"><br/>Hover Here ( Color and padding changing in 500 milli-seconds with Animated05 )<br/><br/></div>
                            <div class=" Animated1 changecolor Container40 white" style="background-color:#D0525D;"><br/>Hover Here ( Color and padding changing in 1 second with Animated1 )<br/><br/></div>
                        </div>
                    </p:panel>
                    
                    <div class="EmptyBox60"></div>
                </div>
            </div>
        </div>
                
    </ui:define>

</ui:composition>